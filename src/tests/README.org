#+TITLE:  CS520 Testing README
#+AUTHOR: gr13
#+DATE:   2024-12-05 December
#+PROPERTY: header-args :results none :eval no-export :comments no
#+OPTIONS: toc:nil html-postamble:nil html-preamble:nil d:nil
#+OPTIONS: num:nil todo:nil tasks:nil tags:nil date:nil
#+OPTIONS: skip:nil author:nil email:nil creator:nil timestamp:nil


* Files tested using Input Space Partitioning (ISP):

'*' signifies base choice in ISP tables.

** Card Provider

*** addCard

**** ISP

| Input Space Partitioning |                |              |                                  |
|--------------------------+----------------+--------------+----------------------------------|
| Variable                 | Characteristic | Partition    | Value                            |
|--------------------------+----------------+--------------+----------------------------------|
|--------------------------+----------------+--------------+----------------------------------|
| cards                    | A) undefined?  | A1) T        | undefined                        |
|                          |                | A2*) F       | array obj                        |
|                          | B) size        | B1) 0        | []                               |
|                          |                | B2) 1        | ['manwe'...]                     |
|                          |                | B3*) >1      | [{size 7}]                       |
|--------------------------+----------------+--------------+----------------------------------|
| addCard.front            | A) undefined?  | A1) T        | undefined                        |
|                          |                | A2*) F       | 'sauron'                         |
|                          | B) type        | B1*) string  | 'sauron'                         |
|                          |                | B2) other    | number:1                         |
|--------------------------+----------------+--------------+----------------------------------|
| addCard.back             | A) undefined?  | A1) T        | undefined                        |
|                          |                | A2*) F       | 'lord of the rings'              |
|                          | B) type        | B1*) string  | 'lord of the rings'              |
|                          |                | B2) other    | number:1                         |
|--------------------------+----------------+--------------+----------------------------------|
| addCard.tags             | A) undefined?  | A1) T        | undefined                        |
|                          |                | A2*) F       | ['ainur', 'immortal', 'immoral'] |
|                          | B) type        | B1*) strings | ['ainur', 'immortal', 'immoral'] |
|                          |                | B2) other    | number:[1, 2, 3]                 |
|                          | C) size        | C1) 0        | []                               |
|                          |                | C2) 1        | ['ainur']                        |
|                          |                | C3*) >1      | ['ainur', 'immortal', 'immoral'] |

**** BCC

| Base Choice Coverage Test Set |          |          |         |         |        |
| Test                          |          |          |         |         | Throw? |
|-------------------------------+----------+----------+---------+---------+--------|
| addCard-base                  | cards:B3 | front:B1 | back:B1 | tags:C3 |        |
| addCard-cards-undefined       | cards:A1 | front:B1 | back:B1 | tags:C3 | Y      |
| addCard-cards-empty           | cards:B1 | front:B1 | back:B1 | tags:C3 |        |
| addCard-cards-single          | cards:B2 | front:B1 | back:B1 | tags:C3 |        |
| addCard-front-undefined       | cards:B3 | front:A1 | back:B1 | tags:C3 | Y      |
| addCard-front-numbers         | cards:B3 | front:B2 | back:B1 | tags:C3 | Y      |
| addCard-back-undefined        | cards:B3 | front:B1 | back:A1 | tags:C3 | Y      |
| addCard-back-numbers          | cards:B3 | front:B1 | back:B2 | tags:C3 | Y      |
| addCard-tags-undefined        | cards:B3 | front:B1 | back:B1 | tags:A1 | Y      |
| addCard-tags-numberss         | cards:B3 | front:B1 | back:B1 | tags:B2 | Y      |
| addCard-tags-empty            | cards:B3 | front:B1 | back:B1 | tags:C1 |        |
| addCard-tags-single           | cards:B3 | front:B1 | back:B1 | tags:C2 |        |

*** removeCard

**** ISP

| Input Space Partitioning |                  |                  |                |
|--------------------------+------------------+------------------+----------------|
| Variable                 | Characteristic   | Partition        | Value          |
|--------------------------+------------------+------------------+----------------|
|--------------------------+------------------+------------------+----------------|
| cards                    | A) undefined?    | A1) T            | undefined      |
|                          |                  | A2*) F           | array obj      |
|                          | B) size          | B1) 0            | []             |
|                          |                  | B2) 1            | ['manwe'...]   |
|                          |                  | B3*) >1          | [{size 7}]     |
|--------------------------+------------------+------------------+----------------|
| removeCard.index         | A) undefined?    | A1) T            | undefined      |
|                          |                  | A2*) F           | 0              |
|                          | B) relative size | B1) < 0          | -1             |
|                          |                  | B2*) = 0         | 0              |
|                          |                  | B3) < cards.size | 3              |
|                          |                  | B4) = cards.size | 7              |
|                          |                  | B5) > cards.size | 8              |
|                          | C) type          | C1*) number      | 0              |
|                          |                  | C2) other        | string:'beren' |

**** BCC

| Base Choice Coverage Test Set |          |          |        |
| Test                          |          |          | Throw? |
|-------------------------------+----------+----------+--------|
| removeCard-base               | cards:B3 | index:B2 |        |
| removeCard-cards-undefined    | cards:A1 | index:B2 | Y      |
| removeCard-cards-empty        | cards:B1 | index:B2 | Y      |
| removeCard-cards-single       | cards:B2 | index:B2 |        |
| removeCard-index-undefined    | cards:B3 | index:A1 | Y      |
| removeCard-index-negative     | cards:B3 | index:B1 | Y      |
| removeCard-index-middle       | cards:B3 | index:B3 |        |
| removeCard-index-match        | cards:B3 | index:B4 |        |
| removeCard-index-over         | cards:B3 | index:B5 | Y      |
| removeCard-index-string       | cards:B3 | index:C2 | Y      |

*** editCard

**** ISP

| Input Space Partitioning |                |                    |                                  |
|--------------------------+----------------+--------------------+----------------------------------|
| Variable                 | Characteristic | Partition          | Value                            |
|--------------------------+----------------+--------------------+----------------------------------|
|--------------------------+----------------+--------------------+----------------------------------|
| cards                    | A) undefined?  | A1) T              | undefined                        |
|                          |                | A2*) F             | array obj                        |
|                          | B) size        | B1) 0              | []                               |
|                          |                | B2) 1              | ['manwe'...]                     |
|                          |                | B3*) >1            | [{size 7}]                       |
|--------------------------+----------------+--------------------+----------------------------------|
| editCard.id              | A) undefined?  | A1) T              | undefined                        |
|                          |                | A2*) F             | 1                                |
|                          | B) value       | B1) negative       | -1                               |
|                          |                | B2) zero           | 0                                |
|                          |                | B3*) lowest card   | 1                                |
|                          |                | B4) highest card   | 7                                |
|                          |                | B5) > highest card | 8                                |
|                          | C) type        | C1*) number        | 1                                |
|                          |                | C2) string         | string:beren                     |
|--------------------------+----------------+--------------------+----------------------------------|
| editCard.front           | A) undefined?  | A1) T              | undefined                        |
|                          |                | A2*) F             | 'sauron'                         |
|                          | B) type        | B1*) string        | 'sauron'                         |
|                          |                | B2) other          | number:1                         |
|--------------------------+----------------+--------------------+----------------------------------|
| editCard.back            | A) undefined?  | A1) T              | undefined                        |
|                          |                | A2*) F             | 'lord of the rings'              |
|                          | B) type        | B1*) string        | 'lord of the rings'              |
|                          |                | B2) other          | number:1                         |
|--------------------------+----------------+--------------------+----------------------------------|
| editCard.tags            | A) undefined?  | A1) T              | undefined                        |
|                          |                | A2*) F             | ['ainur', 'immortal', 'immoral'] |
|                          | B) type        | B1*) strings       | ['ainur', 'immortal', 'immoral'] |
|                          |                | B2) other          | number:[1, 2, 3]                 |
|                          | C) size        | C1) 0              | []                               |
|                          |                | C2) 1              | ['ainur']                        |
|                          |                | C3*) >1            | ['ainur', 'immortal', 'immoral'] |
|                          |                |                    |                                  |

**** BCC

| Base Choice Coverage Test Set |          |        |          |         |         |        |
| Test                          |          |        |          |         |         | Throw? |
|-------------------------------+----------+--------+----------+---------+---------+--------|
| editCard-base                 | cards:B3 | id: B3 | front:B1 | back:B1 | tags:C3 |        |
| editCard-cards-undefined      | cards:A1 | id: B3 | front:B1 | back:B1 | tags:C3 | Y      |
| editCard-cards-empty          | cards:B1 | id: B3 | front:B1 | back:B1 | tags:C3 | Y      |
| editCard-cards-single         | cards:B2 | id: B3 | front:B1 | back:B1 | tags:C3 |        |
| editCard-id-undefined         | cards:B3 | id: A1 | front:B1 | back:B1 | tags:C3 | Y      |
| editCard-id-negative          | cards:B3 | id: B1 | front:B1 | back:B1 | tags:C3 | Y      |
| editCard-id-zero              | cards:B3 | id: B2 | front:B1 | back:B1 | tags:C3 | Y      |
| editCard-id-maximum           | cards:B3 | id: B4 | front:B1 | back:B1 | tags:C3 |        |
| editCard-id-too-high          | cards:B3 | id: B5 | front:B1 | back:B1 | tags:C3 | Y      |
| editCard-id-string            | cards:B3 | id: C2 | front:B1 | back:B1 | tags:C3 | Y      |
| editCard-front-undefined      | cards:B3 | id: B3 | front:A1 | back:B1 | tags:C3 | Y      |
| editCard-front-number         | cards:B3 | id: B3 | front:B2 | back:B1 | tags:C3 | Y      |
| editCard-back-undefined       | cards:B3 | id: B3 | front:B1 | back:A1 | tags:C3 | Y      |
| editCard-back-number          | cards:B3 | id: B3 | front:B1 | back:B2 | tags:C3 | Y      |
| editCard-tags-undefined       | cards:B3 | id: B3 | front:B1 | back:B1 | tags:A1 | Y      |
| editCard-tags-numbers         | cards:B3 | id: B3 | front:B1 | back:B1 | tags:B2 | Y      |
| editCard-tags-none            | cards:B3 | id: B3 | front:B1 | back:B1 | tags:C1 |        |
| editCard-tags-single          | cards:B3 | id: B3 | front:B1 | back:B1 | tags:C2 |        |

*** getTags

**** ISP

| Input Space Partitioning |                         |           |              |
|--------------------------+-------------------------+-----------+--------------|
| Variable                 | Characteristic          | Partition | Value        |
|--------------------------+-------------------------+-----------+--------------|
|--------------------------+-------------------------+-----------+--------------|
| cards                    | A) undefined?           | A1) T     | undefined    |
|                          |                         | A2*) F    | array obj    |
|                          | B) size                 | B1) 0     | []           |
|                          |                         | B2) 1     | ['manwe'...] |
|                          |                         | B3*) >1   | [{size 7}]   |
|                          | C) contains 'learning'  | C1*) F    | ...          |
|                          |                         | C2) T     | learning     |

**** BCC

| Base Choice Coverage Test Set |          |        |
| Test                          |          | Throw? |
|-------------------------------+----------+--------|
| getTags-base                  | cards:B3 |        |
| getTags-cards-undefined       | cards:A1 | Y      |
| getTags-cards-empty           | cards:B1 |        |
| getTags-cards-single          | cards:B2 |        |
| getTags-cards-learning        | cards:C2 |        |

*** modifyMastery

**** ISP

| Input Space Partitioning |                |                    |                |
|--------------------------+----------------+--------------------+----------------|
| Variable                 | Characteristic | Partition          |          Value |
|--------------------------+----------------+--------------------+----------------|
|--------------------------+----------------+--------------------+----------------|
| cards                    | A) undefined?  | A1) T              |      undefined |
|                          |                | A2*) F             |      array obj |
|                          | B) size        | B1) 0              |             [] |
|                          |                | B2) 1              |   ['manwe'...] |
|                          |                | B3*) >1            |     [{size 7}] |
|--------------------------+----------------+--------------------+----------------|
| cards.mastery            | A) magnitude   | A1) < -3           |             -5 |
|                          |                | A2) < 0            |             -1 |
|                          |                | A3*) = 0           |              0 |
|                          |                | A4) > 0            |              1 |
|                          |                | A5) > 3            |              5 |
|--------------------------+----------------+--------------------+----------------|
| modifyMastery.id         | A) undefined?  | A1) T              |      undefined |
|                          |                | A2*) F             |              1 |
|                          | B) value       | B1) negative       |             -1 |
|                          |                | B2) zero           |              0 |
|                          |                | B3*) lowest card   |              1 |
|                          |                | B4) highest card   |              7 |
|                          |                | B5) > highest card |              8 |
|                          | C) type        | C1*) number        |              1 |
|                          |                | C2) string         |   string:beren |
|--------------------------+----------------+--------------------+----------------|
| modifyMastery.num        | A) undefined?  | A1) T              |      undefined |
|                          |                | A2*) F             |              1 |
|                          | B) magnitude   | B1) < -3           |             -5 |
|                          |                | B2*) < 0           |             -1 |
|                          |                | B3) = 0            |              0 |
|                          |                | B4) > 0            |              1 |
|                          |                | B5) > 3            |              5 |
|                          | C) type        | C1*) number        |              1 |
|                          |                | C2) other          | string:'beren' |

**** BCC

| Base Choice Coverage Test Set |          |            |        |        |   |
| Test                          |          |            |        | Throw? |   |
|-------------------------------+----------+------------+--------+--------+---|
| modifyMastery-base            | cards:B3 | mastery:A3 | id: B3 | num:B2 |   |
| modifyMastery-cards-undefined | cards:A1 | mastery:A3 | id: B3 | num:B2 | Y |
| modifyMastery-cards-empty     | cards:B1 | mastery:A3 | id: B3 | num:B2 | Y |
| modifyMastery-cards-single    | cards:B2 | mastery:A3 | id: B3 | num:B2 |   |
| modifyMastery-mastery-neg-5   | cards:B2 | mastery:A1 | id: B3 | num:B4 |   |
| modifyMastery-mastery-neg-1   | cards:B2 | mastery:A2 | id: B3 | num:B4 |   |
| modifyMastery-mastery-1       | cards:B2 | mastery:A4 | id: B3 | num:B4 |   |
| modifyMastery-mastery-5       | cards:B2 | mastery:A5 | id: B3 | num:B4 |   |
| editCard-id-undefined         | cards:B3 | mastery:A3 | id: A1 | num:B2 | Y |
| editCard-id-negative          | cards:B3 | mastery:A3 | id: B1 | num:B2 | Y |
| editCard-id-zero              | cards:B3 | mastery:A3 | id: B2 | num:B2 | Y |
| editCard-id-maximum           | cards:B3 | mastery:A3 | id: B4 | num:B2 |   |
| editCard-id-too-high          | cards:B3 | mastery:A3 | id: B5 | num:B2 | Y |
| editCard-id-string            | cards:B3 | mastery:A3 | id: C2 | num:B2 | Y |
| modifyMastery-num-undefined   | cards:B3 | mastery:A3 | id: B3 | num:A1 | Y |
| modifyMastery-num-neg-5       | cards:B3 | mastery:A3 | id: B3 | num:B1 |   |
| modifyMastery-num-zero        | cards:B3 | mastery:A3 | id: B3 | num:B3 |   |
| modifyMastery-num-one         | cards:B3 | mastery:A3 | id: B3 | num:B4 |   |
| modifyMastery-num-5           | cards:B3 | mastery:A3 | id: B3 | num:B5 |   |
| modifyMastery-num-string      | cards:B3 | mastery:A3 | id: B3 | num:C2 | Y |


* Files tested using Workflows:

Below lists each use case and diagram detailing possible system/user interactions.

** Use Case 1: View Flashcards
  #+ATTR_HTML: :width 1100px
  [[file:images/1.png]]
** Use Case 2: Create Flashcard
  #+ATTR_HTML: :width 1100px
  [[file:images/2.png]]
** Use Case 3: View Flashcard
  #+ATTR_HTML: :width 1100px
  [[file:images/3.png]]
** Use Case 4: Add & Create Tag
  #+ATTR_HTML: :width 1100px
  [[file:images/4.png]]
** Use Case 5: Remove Tag
  #+ATTR_HTML: :width 1100px
  [[file:images/5.png]]
** Use Case 6: Edit Flashcard
  #+ATTR_HTML: :width 1100px
  [[file:images/6.png]]
** Use Case 7: Delete Flashcard
  #+ATTR_HTML: :width 1100px
  [[file:images/7.png]]
** Use Case 8: Filter Flashcards
  #+ATTR_HTML: :width 1100px
  [[file:images/8.png]]
** Use Case 9: Practice Flashcards
  #+ATTR_HTML: :width 1100px
  [[file:images/9.png]]
** Use Case 10: Export Flashcards
  #+ATTR_HTML: :width 1100px
  [[file:images/10.png]]
** Use Case 11: Import Flashcards
  #+ATTR_HTML: :width 1100px
  [[file:images/11.png]]

* No Specific Strategy

** TagMatchExpression

This file implements a parser---the input domain was too big to perform ISP.

Tests were designed by using a varying number of &&s and ||s. Each test expression was evaluated against a list of strings that were expected to match, and one that was not.

In the cases both &s and |s were used, there exists a test that follows the natural order of operations, and one that adds parenthesis to reverse the order.

Many of these tests also include a variation that introduces a NOT (!) which is placed to reverse the final result.

The lexer tests include:

- 'single tag'
- 'two tags'
- 'two tags AND'
- 'two tags OR'
- 'two tags OR'
- 'two tags XOR'
- 'paren tag'
- 'NOT tag'
- 'complex expression'
- 'complex expression whitespace'

The &, |, ^, !, and parenthesis tests include:
- 'zero tags'
- 'one tag matched'
- 'one tag unmatched'
- 'one tag one ! matched'
- 'one tag one ! umatched'
- 'one & matched'
- 'one & umatched'
- 'two & matched'
- 'two & umatched'
- 'one | matched'
- 'one | umatched'
- 'two | matched'
- 'two | umatched'
- 'two ^ matched'
- 'two ^ umatched'
- 'one && one | matched 1.1'
- 'one && one | matched 1.2'
- 'one && one | umatched 1.3'
- 'one && one | one ! matched 1.4'
- 'one && one | matched 2.1'
- 'one && one | matched 2.2'
- 'one && one | umatched 2.3'
- 'one && one | one ! matched 2.4'

As well as tests against invalid input:
- '() all invalid'
- '& tag1 all invalid'
- '& tag1 all invalid'
- '!& & tag2 first invalid'
- '!& | tag2 first invalid'
- 'tag2 & !! second invalid'
- 'tag2 | !! second invalid'
